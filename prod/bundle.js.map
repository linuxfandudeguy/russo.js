{"version":3,"file":"bundle.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,QAAS,GAAIH,GACM,iBAAZC,QACdA,QAAe,MAAID,IAEnBD,EAAY,MAAIC,GACjB,CATD,CASGK,MAAM,I,mBCRT,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBL,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,GAAO,G,+vBCFvD,IAAMC,EAAQ,CACnBC,cCJK,SAAuBC,GAE7B,IAAMC,EAAU,CACf,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAC9C,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,IAAK,KAAM,IAAK,IAAM,IAAK,IAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAC9C,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,IAAK,KAAM,IAAK,IAAM,IAAK,KAG3B,OAAOC,EAAIF,GAAMG,KAAI,SAAAC,GAAI,OAAIH,EAAQG,IAASA,CAAI,IAAEC,KAAK,GAC3D,EDfEC,UELK,SAAmBN,GAExB,IAAMO,EAAqB,CACzB,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAC7C,EAAK,IAAK,GAAM,IAAK,GAAM,IAAK,EAAK,IAAK,EAAK,IAC/C,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAC7C,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAAK,EAAK,IAC7C,EAAK,IAAK,EAAK,IAAK,GAAM,IAAK,GAAM,IAAK,GAAM,IAChD,GAAM,IAAK,KAAQ,IAAK,GAAM,IAAK,GAAM,IAAK,IAAK,IACnD,IAAK,KAIDC,EAAQ,IAAIC,OAChBvB,OAAOwB,KAAKH,GAAoBI,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAEC,OAASF,EAAEE,MAAM,IAAET,KAAK,KACzE,MAIF,OAAOL,EAAKe,QAAQP,GAAO,SAACQ,GAC1B,IAAMC,EAAcD,EAAM,KAAOA,EAAM,GAAGE,cACpCC,EAAaH,EAAMI,cAGnBC,EAAWd,EAAmBY,GACpC,OAAOF,EAAcI,EAASH,cAAgBG,CAChD,GACF,G","sources":["webpack://russo/webpack/universalModuleDefinition","webpack://russo/webpack/bootstrap","webpack://russo/webpack/runtime/define property getters","webpack://russo/webpack/runtime/hasOwnProperty shorthand","webpack://russo/webpack/runtime/make namespace object","webpack://russo/./src/index.js","webpack://russo/./src/mappings/transliterate.js","webpack://russo/./src/mappings/toRussian.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"russo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"russo\"] = factory();\n\telse\n\t\troot[\"russo\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { transliterate } from './mappings/transliterate.js';\nimport { toRussian } from './mappings/toRussian.js';\n\nexport const Russo = {\n  transliterate,\n  toRussian\n};\n","export function transliterate(text) {\n // use iso 9\n const mapping = {\n  'А': 'A', 'Б': 'B', 'В': 'V', 'Г': 'G', 'Д': 'D',\n  'Е': 'E', 'Ё': 'Ë', 'Ж': 'Ž', 'З': 'Z', 'И': 'I',\n  'Й': 'J', 'К': 'K', 'Л': 'L', 'М': 'M', 'Н': 'N',\n  'О': 'O', 'П': 'P', 'Р': 'R', 'С': 'S', 'Т': 'T',\n  'У': 'U', 'Ф': 'F', 'Х': 'Ch', 'Ц': 'C', 'Ч': 'Č',\n  'Ш': 'Š', 'Щ': 'Šč', 'Ы': 'Y', 'Э': 'E', 'Ю': 'Ju',\n  'Я': 'Ja', 'Ь': '\\'', 'Ъ': '\\'',\n  'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd',\n  'е': 'e', 'ё': 'ë', 'ж': 'ž', 'з': 'z', 'и': 'i',\n  'й': 'j', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n',\n  'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't',\n  'у': 'u', 'ф': 'f', 'х': 'ch', 'ц': 'c', 'ч': 'č',\n  'ш': 'š', 'щ': 'šč', 'ы': 'y', 'э': 'e', 'ю': 'ju',\n  'я': 'ja', 'ь': '\\'', 'ъ': '\\''\n};\n  // Perform transliteration by mapping each character\n  return [...text].map(char => mapping[char] || char).join('');\n}\n","export function toRussian(text) {\n  // Full transliteration mapping, including single letters and digraphs\n  const transliterationMap = {\n    'a': 'а', 'b': 'б', 'v': 'в', 'g': 'г', 'd': 'д',\n    'e': 'е', 'yo': 'ё', 'zh': 'ж', 'z': 'з', 'i': 'и',\n    'y': 'й', 'k': 'к', 'l': 'л', 'm': 'м', 'n': 'н',\n    'o': 'о', 'p': 'п', 'r': 'р', 's': 'с', 't': 'т',\n    'u': 'у', 'f': 'ф', 'kh': 'х', 'ts': 'ц', 'ch': 'ч',\n    'sh': 'ш', 'shch': 'щ', 'yu': 'ю', 'ya': 'я', \"'\": 'ь',\n    ' ': ' ', // Preserve spaces\n  };\n\n  // Create a regular expression to match digraphs first (e.g., \"sh\", \"zh\") and single letters\n  const regex = new RegExp(\n    Object.keys(transliterationMap).sort((a, b) => b.length - a.length).join('|'),\n    'gi'\n  );\n\n  // Perform transliteration\n  return text.replace(regex, (match) => {\n    const isUpperCase = match[0] === match[0].toUpperCase();\n    const lowerMatch = match.toLowerCase();\n\n    // Get Cyrillic equivalent and preserve case\n    const cyrillic = transliterationMap[lowerMatch];\n    return isUpperCase ? cyrillic.toUpperCase() : cyrillic;\n  });\n}\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Russo","transliterate","text","mapping","_toConsumableArray","map","char","join","toRussian","transliterationMap","regex","RegExp","keys","sort","a","b","length","replace","match","isUpperCase","toUpperCase","lowerMatch","toLowerCase","cyrillic"],"sourceRoot":""}
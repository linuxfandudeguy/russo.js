{
  "version": 3,
  "sources": ["../src/mappings/transliterate.js", "../src/mappings/toRussian.js", "../src/index.js"],
  "sourcesContent": ["export function transliterate(text) {\n // use iso 9\n const mapping = {\n  '\u0410': 'A', '\u0411': 'B', '\u0412': 'V', '\u0413': 'G', '\u0414': 'D',\n  '\u0415': 'E', '\u0401': '\u00CB', '\u0416': '\u017D', '\u0417': 'Z', '\u0418': 'I',\n  '\u0419': 'J', '\u041A': 'K', '\u041B': 'L', '\u041C': 'M', '\u041D': 'N',\n  '\u041E': 'O', '\u041F': 'P', '\u0420': 'R', '\u0421': 'S', '\u0422': 'T',\n  '\u0423': 'U', '\u0424': 'F', '\u0425': 'Ch', '\u0426': 'C', '\u0427': '\u010C',\n  '\u0428': '\u0160', '\u0429': '\u0160\u010D', '\u042B': 'Y', '\u042D': 'E', '\u042E': 'Ju',\n  '\u042F': 'Ja', '\u042C': '\\'', '\u042A': '\\'',\n  '\u0430': 'a', '\u0431': 'b', '\u0432': 'v', '\u0433': 'g', '\u0434': 'd',\n  '\u0435': 'e', '\u0451': '\u00EB', '\u0436': '\u017E', '\u0437': 'z', '\u0438': 'i',\n  '\u0439': 'j', '\u043A': 'k', '\u043B': 'l', '\u043C': 'm', '\u043D': 'n',\n  '\u043E': 'o', '\u043F': 'p', '\u0440': 'r', '\u0441': 's', '\u0442': 't',\n  '\u0443': 'u', '\u0444': 'f', '\u0445': 'ch', '\u0446': 'c', '\u0447': '\u010D',\n  '\u0448': '\u0161', '\u0449': '\u0161\u010D', '\u044B': 'y', '\u044D': 'e', '\u044E': 'ju',\n  '\u044F': 'ja', '\u044C': '\\'', '\u044A': '\\''\n};\n  // Perform transliteration by mapping each character\n  return [...text].map(char => mapping[char] || char).join('');\n}\n", "export function toRussian(text) {\n  // Full transliteration mapping, including single letters and digraphs\n  const transliterationMap = {\n    'a': '\u0430', 'b': '\u0431', 'v': '\u0432', 'g': '\u0433', 'd': '\u0434',\n    'e': '\u0435', 'yo': '\u0451', 'zh': '\u0436', 'z': '\u0437', 'i': '\u0438',\n    'y': '\u0439', 'k': '\u043A', 'l': '\u043B', 'm': '\u043C', 'n': '\u043D',\n    'o': '\u043E', 'p': '\u043F', 'r': '\u0440', 's': '\u0441', 't': '\u0442',\n    'u': '\u0443', 'f': '\u0444', 'kh': '\u0445', 'ts': '\u0446', 'ch': '\u0447',\n    'sh': '\u0448', 'shch': '\u0449', 'yu': '\u044E', 'ya': '\u044F', \"'\": '\u044C',\n    ' ': ' ', // Preserve spaces\n  };\n\n  // Create a regular expression to match digraphs first (e.g., \"sh\", \"zh\") and single letters\n  const regex = new RegExp(\n    Object.keys(transliterationMap).sort((a, b) => b.length - a.length).join('|'),\n    'gi'\n  );\n\n  // Perform transliteration\n  return text.replace(regex, (match) => {\n    const isUpperCase = match[0] === match[0].toUpperCase();\n    const lowerMatch = match.toLowerCase();\n\n    // Get Cyrillic equivalent and preserve case\n    const cyrillic = transliterationMap[lowerMatch];\n    return isUpperCase ? cyrillic.toUpperCase() : cyrillic;\n  });\n}\n", "import { transliterate } from './mappings/transliterate.js';\nimport { toRussian } from './mappings/toRussian.js';\n\nexport const Russo = {\n  transliterate,\n  toRussian\n};\n"],
  "mappings": "AAAO,SAASA,EAAcC,EAAM,CAEnC,IAAMC,EAAU,CACf,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAC7C,OAAK,IAAK,OAAK,OAAK,OAAK,SAAK,OAAK,IAAK,OAAK,IAC7C,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAC7C,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAC7C,OAAK,IAAK,OAAK,IAAK,OAAK,KAAM,OAAK,IAAK,OAAK,SAC9C,OAAK,SAAK,OAAK,eAAM,OAAK,IAAK,OAAK,IAAK,OAAK,KAC9C,OAAK,KAAM,OAAK,IAAM,OAAK,IAC3B,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAC7C,OAAK,IAAK,OAAK,OAAK,OAAK,SAAK,OAAK,IAAK,OAAK,IAC7C,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAC7C,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAAK,OAAK,IAC7C,OAAK,IAAK,OAAK,IAAK,OAAK,KAAM,OAAK,IAAK,OAAK,SAC9C,OAAK,SAAK,OAAK,eAAM,OAAK,IAAK,OAAK,IAAK,OAAK,KAC9C,OAAK,KAAM,OAAK,IAAM,OAAK,GAC7B,EAEE,MAAO,CAAC,GAAGD,CAAI,EAAE,IAAIE,GAAQD,EAAQC,CAAI,GAAKA,CAAI,EAAE,KAAK,EAAE,CAC7D,CCpBO,SAASC,EAAUC,EAAM,CAE9B,IAAMC,EAAqB,CACzB,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAC7C,EAAK,SAAK,GAAM,SAAK,GAAM,SAAK,EAAK,SAAK,EAAK,SAC/C,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAC7C,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAAK,EAAK,SAC7C,EAAK,SAAK,EAAK,SAAK,GAAM,SAAK,GAAM,SAAK,GAAM,SAChD,GAAM,SAAK,KAAQ,SAAK,GAAM,SAAK,GAAM,SAAK,IAAK,SACnD,IAAK,GACP,EAGMC,EAAQ,IAAI,OAChB,OAAO,KAAKD,CAAkB,EAAE,KAAK,CAACE,EAAGC,IAAMA,EAAE,OAASD,EAAE,MAAM,EAAE,KAAK,GAAG,EAC5E,IACF,EAGA,OAAOH,EAAK,QAAQE,EAAQG,GAAU,CACpC,IAAMC,EAAcD,EAAM,CAAC,IAAMA,EAAM,CAAC,EAAE,YAAY,EAChDE,EAAaF,EAAM,YAAY,EAG/BG,EAAWP,EAAmBM,CAAU,EAC9C,OAAOD,EAAcE,EAAS,YAAY,EAAIA,CAChD,CAAC,CACH,CCxBO,IAAMC,EAAQ,CACnB,cAAAC,EACA,UAAAC,CACF",
  "names": ["transliterate", "text", "mapping", "char", "toRussian", "text", "transliterationMap", "regex", "a", "b", "match", "isUpperCase", "lowerMatch", "cyrillic", "Russo", "transliterate", "toRussian"]
}
